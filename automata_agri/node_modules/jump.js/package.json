{
  "_from": "jump.js@^1.0.2",
  "_id": "jump.js@1.0.2",
  "_inBundle": false,
  "_integrity": "sha1-4GQbR/QKOPITnCX9oFAL8o5DAVo=",
  "_location": "/jump.js",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "jump.js",
    "fetchSpec": "^1.0.2",
    "name": "jump.js",
    "raw": "jump.js@^1.0.2",
    "rawSpec": "^1.0.2",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/jump.js/-/jump.js-1.0.2.tgz",
  "_shasum": "e0641b47f40a38f2139c25fda0500bf28e43015a",
  "_shrinkwrap": null,
  "_spec": "jump.js@^1.0.2",
  "_where": "C:\\Users\\Sarthak Dandotiya\\Desktop\\agro",
  "author": {
    "email": "callmecavs@gmail.com",
    "name": "Michael Cavalea",
    "url": "http://callmecavs.com/"
  },
  "bugs": {
    "url": "https://github.com/callmecavs/jump.js/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "A modern smooth scrolling library.",
  "devDependencies": {
    "babel-eslint": "^7.1.1",
    "babel-plugin-external-helpers": "^6.18.0",
    "babel-preset-es2015-rollup": "^3.0.0",
    "babel-preset-stage-0": "^6.16.0",
    "eslint": "^3.13.0",
    "eslint-config-standard": "^6.2.1",
    "eslint-plugin-promise": "^3.4.0",
    "eslint-plugin-standard": "^2.0.1",
    "rollup": "^0.41.1",
    "rollup-plugin-babel": "^2.7.1",
    "rollup-plugin-node-resolve": "^2.0.0",
    "rollup-watch": "^3.2.2"
  },
  "homepage": "https://github.com/callmecavs/jump.js#readme",
  "jsnext:main": "dist/jump.module.js",
  "keywords": [
    "scroll",
    "smooth"
  ],
  "license": "MIT",
  "main": "dist/jump.js",
  "module": "dist/jump.module.js",
  "name": "jump.js",
  "optionalDependencies": {},
  "readme": "# Jump.js\n\n[![Jump.js on NPM](https://img.shields.io/npm/v/jump.js.svg?style=flat-square)](https://www.npmjs.com/package/jump.js)\n\nA modern smooth scrolling library.\n\n* [Demo Page](http://callmecavs.github.io/jump.js/) (Click the arrows!)\n\n## Usage\n\nJump was developed with a modern JavaScript workflow in mind. To use it, it's recommended you have a build system in place that can transpile ES6, and bundle modules. For a minimal boilerplate that fulfills those requirements, check out [outset](https://github.com/callmecavs/outset).\n\nFollow these steps to get started:\n\n1. [Install](#install)\n2. [Import](#import)\n3. [Call](#call)\n4. [Review Options](#options)\n\n### Install\n\nUsing NPM, install Jump, and save it to your `package.json` dependencies.\n\n```bash\n$ npm install jump.js --save\n```\n\n### Import\n\nImport Jump, naming it according to your preference.\n\n```es6\n// import Jump\n\nimport jump from 'jump.js'\n```\n\n### Call\n\nJump exports a _singleton_, so there's no need to create an instance. Just call it, passing a [target](#target).\n\n```es6\n// call Jump, passing a target\n\njump('.target')\n```\n\nNote that the singleton can make an infinite number of jumps.\n\n## Options\n\nAll options, **except [target](#target)**, are optional, and have sensible defaults. The defaults are shown below:\n\n```es6\njump('.target', {\n  duration: 1000,\n  offset: 0,\n  callback: undefined,\n  easing: easeInOutQuad,\n  a11y: false\n})\n```\n\nExplanation of each option follows:\n\n* [target](#target)\n* [duration](#duration)\n* [offset](#offset)\n* [callback](#callback)\n* [easing](#easing)\n* [a11y](#a11y)\n\n### target\n\nScroll _from the current position_ by passing a number of pixels.\n\n```es6\n// scroll down 100px\n\njump(100)\n\n// scroll up 100px\n\njump(-100)\n```\n\nOr, scroll _to an element_, by passing either:\n\n* a node, or\n* a CSS selector\n\n```es6\n// passing a node\n\nconst node = document.querySelector('.target')\n\njump(node)\n\n// passing a CSS selector\n// the element referenced by the selector is determined using document.querySelector\n\njump('.target')\n```\n\n### duration\n\nPass the time the `jump()` takes, in milliseconds.\n\n```es6\njump('.target', {\n  duration: 1000\n})\n```\n\nOr, pass a function that returns the duration of the `jump()` in milliseconds. This function is passed the `jump()` `distance`, in `px`, as a parameter.\n\n```es6\njump('.target', {\n  duration: distance => Math.abs(distance)\n})\n```\n\n### offset\n\nOffset a `jump()`, _only if to an element_, by a number of pixels.\n\n```es6\n// stop 10px before the top of the element\n\njump('.target', {\n  offset: -10\n})\n\n// stop 10px after the top of the element\n\njump('.target', {\n  offset: 10\n})\n```\n\nNote that this option is useful for accommodating `position: fixed` elements.\n\n### callback\n\nPass a function that will be called after the `jump()` has been completed.\n\n```es6\n// in both regular and arrow functions, this === window\n\njump('.target', {\n  callback: () => console.log('Jump completed!')\n})\n```\n\n### easing\n\nEasing function used to transition the `jump()`.\n\n```es6\njump('.target', {\n  easing: easeInOutQuad\n})\n```\n\nSee [easing.js](https://github.com/callmecavs/jump.js/blob/master/src/easing.js) for the definition of `easeInOutQuad`, the default easing function. Credit for this function goes to Robert Penner.\n\n### a11y\n\nIf enabled, _and scrolling to an element_:\n\n* add a [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) to, and\n* [`focus`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus) the element\n\n```es6\njump('.target', {\n  a11y: true\n})\n```\n\nNote that this option is disabled by default because it has _visual implications_ in many browsers. Focusing an element triggers the `:focus` CSS state selector, and is often accompanied by an `outline`.\n\n## Browser Support\n\nJump depends on the following browser APIs:\n\n* [requestAnimationFrame](https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame)\n\nConsequently, it supports the following natively:\n\n* Chrome 24+\n* Firefox 23+\n* Safari 6.1+\n* Opera 15+\n* IE 10+\n* iOS Safari 7.1+\n* Android Browser 4.4+\n\nTo add support for older browsers, consider including polyfills/shims for the APIs listed above. There are no plans to include any in the library, in the interest of file size.\n\n## License\n\n[MIT](https://opensource.org/licenses/MIT). Â© 2016 Michael Cavalea\n\n[![Built With Love](http://forthebadge.com/images/badges/built-with-love.svg)](http://forthebadge.com)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/callmecavs/jump.js.git"
  },
  "scripts": {
    "build": "rollup -c",
    "dev": "rollup -c -w -m inline",
    "prebuild": "eslint src",
    "prepublish": "npm run build",
    "server": "python -m SimpleHTTPServer 3000"
  },
  "version": "1.0.2"
}
